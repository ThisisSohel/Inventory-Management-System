@using IMS.WEB.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<main aria-labelledby="title" class="d-flex justify-content-center align-items-center min-vh-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card shadow-lg" style="background-color: #1d4552; border: 1px solid">
                    <div class="card-body">
                        <h2 id="title" class="text-center text-white">Login</h2>
                        <section id="loginForm">
                            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <hr style="border-bottom: 2px solid white" />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="row justify-content-center">
                                    <div class="col-md-8">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Email, new { @class = "col-form-label text-white" })
                                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "xyz@gmail.com" })
                                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row justify-content-center">
                                    <div class="col-md-8">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Password, new { @class = "col-form-label text-white" })
                                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                @*<div class="form-group form-check">
                @Html.CheckBoxFor(m => m.RememberMe, new { @class = "form-check-input" })
                @Html.LabelFor(m => m.RememberMe, new { @class = "form-check-label" })
            </div>*@
                                <div class="form-group text-center m-2">
                                    <input type="submit" value="Log in" class="btn btn-outline-dark text-white" />
                                </div>
                                <p class="text-center btn btn-outline-dark">
                                    @Html.ActionLink("New Register", "Register", new { @class = "text-white" })
                                </p>
                                @* Enable this once you have account confirmation enabled for password reset functionality
            @*<p class="text-center">
                @Html.ActionLink("Forgot your password?", "ForgotPassword")
            </p>*@
                            }
                        </section>
                    </div>
                </div>
            </div>
            <div class="col-md-4 d-none">
                <section id="socialLoginForm">
                    @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                </section>
            </div>
        </div>
    </div>
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
